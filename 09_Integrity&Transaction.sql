-- 09. 데이터 무결성과 트랜잭션 : DB 운영 기본 규칙

/* 데이터 무결성과 제약조건
1. 데이터 무결성 : DB 시스템은 데이터에 접근 또는 처리할 떄 부적절 데이터 입력되는지 검사하여 데이터의 결점 없음(무결성)을 유지하기위한 기본 규칙

데이터 무결성의 종류
1) 개체 무결성(Entity Integrity) : 기본키로 선택된 열은 고유해야 하며 null 값 가질 수 없음
2) 참조 무결성(Reference Intergrity) : 기본키와 외래키의 관계, 테이블 경우 기본키와 외래키간의 관계 항상 유지 보장, 참조 외래키 존재시 행 삭제될 수 없고 기본 키 변경 불가능
3) 영역 무결성(Domain Integrity) : 데이터 형태, 범위, 기본값, 유일성에 관한 제한, 주어진 속성 값은 그 속성이 정의된 도메인에 속한 값이어야 함
4) 비즈니스 무결성(Business Integrity) : 사용자 업무 규칙에 따른 비즈니스적인 제약 조건(제약조건, Default, Trigger등의 사용자 정의)

2. 제약조건 : 정해놓은 규칙에 맞는 데이터만 입력받고 규칙 어긋나는 뎅터는 거부하여 데이터 무결성 지키는 방법

1) 기본키 제약조건 : UNIQUE + NOT NULL을 만족해야 하며 테이블을 대표하여 각 행을 유일하게 식별하는 값이어야 함
2) 외래키 제약조건 : 열 값이 부모 테이블의 참조 열의 값을 반드시 참조해야하며, 참조되는 열은 UNIQUE하거나 기본키
3) 유일키 : 중복된 값 허용하지 않음, 유일한 값으로 존재해야 함(NULL값 허용가능)
4) NOT NULL : NULL값 허용하지 않고 반드시 값 입력해야 함
5) CHECK : 범위나 조건 등 지정된 값만 허용
*/


/* 트랜잭션 : 데이터 처리의 기본 작업 단위
1. 트랜잭션 특징 : DB 무결성 보장 상태에서 DML 작업 완수하기 위한 기본작업 단위

트랜잭션의 의미
일반적 : DML 실행과 실행에 대한 커밋/롤백 단계
실무 : DB에서 SELECT 문으로 데이터 조회하고 DML을 실행하여 종료하는 과정

트랜잭션의 특징(ACID)
1) 원자성(Atomicity) : 트랜잭션 처리가 완전히 끝나지 않았을 경우 전혀 이루어지지 않은 것과 같아야 함
2) 일관성(Consistency) : 트랜잭션 실행이 완료되면 DB는 모순 없이 일관성 보존된 상태여야 함
3) 격리성/고립성(Isolation) : 어떤 트랜잭션도 다른 트랜잭션의 부분적 실행 결과 볼 수 없음
4) 영속성(지속성(Durability) : 트랜잭션 성공하면 트랜잭션의 결과를 영구적으로 보장해야 함

2. 트랜잭션의 상태변화와 트랜잭션의 제어어

트랜잭션 수행단계
1) 실행(Active) : 트랜잭션을 실행 중
2) 부분 완료(Partially Committed) : DML 등 트랜잭션 명령 실행한 후의 상태
3) 완료(Committed = 커밋) : 트랜잭션 성공적으로 완료
4) 실패(Failed) : 더 이상 정상적 실행될 수 없음을 발견
5) 철회(Aborted = 롤백) : 트랜잭션 복원되어 트랜잭션 수행 이전 상태로 돌아감

커밋과 롤백
1) 커밋(Commit) : 트랜잭션의 모든 미결정 데이터를 영구적으로 반영함으로써 트랜잭션 종료(저장과 유사)
2) 롤백(Rollback) : 트랜잭션의 모든 미결정 데이터 변경을 포기함으로써 트랜잭션 종료(되돌리기와 유사)

커밋 이전과 이후의 차이점
1) 커밋 이전
- 데이터 변경 이전 상태로 복구 가능(롤백)
- 현재 사용자만 DML 작업 결과 확인 가능하고 다른 사용자는 확인 불가능
- 변경 중인 행은 접근 제어되어 다른 사용자 변경 불가능

2) 커밋 이후
- DB 데이터를 영구적으로 변경/적용하며 기존 데이터는 상실
- 모든 사용자가 결과 확인 가능
- 접근 제어 해지되어 다른 사용자가 변경 가능

3) 상황에 따른 트랜잭션 제어어 실행여부
- 일반적 DML명령어 실행시 수동으로 커밋
- DDL 명령어는 실행할 때 자동으로 커밋
*/


/* 동시성 제어 : 동시 실행되는 여러개의 트랜잭션이 작업 성공적으로 마칠 수 있도록 지원

동시성 제어 기법
1) 락킹(Locking) : 트랜잭션이 데이터 잠금 설정하면 다른 트랜잭션을 해당 데이터에 대한 잠금 해제 될때까지 접근/수정/삭제 불가
2) 타임스탬프(TImestamp) : 시스템에서 생성하는 고유 번호인 타임스탬프를 트랜잭션에 부여함으로써 트랜잭션 간의 접근 순서 미리 정함
3) 적합성(Validation) 검증 : 먼저 트랜잭션 수행하고 트랜잭션 종료할 때 적합성 검증하여 DB에 최종 반영
*/
